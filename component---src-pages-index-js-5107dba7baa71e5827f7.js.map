{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["$export","$entries","S","entries","it","MONTHS","groupBy","list","keyGetter","map","forEach","item","key","push","IndexPage","props","now","Date","termine","data","nodes","termin","start","end","filter","sort","a","b","monthly","Object","getFullYear","reduce","memo","year","items","getMonth","console","log","title","months","month","name","spieletag","toLocaleDateString","JSON","stringify","index","query","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","length","i","result","call"],"mappings":"gFACA,IAAIA,EAAU,EAAQ,QAClBC,EAAW,EAAQ,OAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BC,QAAS,SAAiBC,GACxB,OAAOH,EAASG,O,kNCCdC,EAAS,CACb,SACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGF,SAASC,EAAQC,EAAMC,GACrB,IAAMC,EAAM,GASZ,OARAF,EAAKG,SAAQ,SAAAC,GACX,IAAMC,EAAMJ,EAAUG,GAChBC,KAAOH,EAGXA,EAAIG,GAAKC,KAAKF,GAFdF,EAAIG,GAAO,CAACD,MAKTF,EA4FMK,UAzFG,SAAAC,GAChB,IAAMC,EAAM,IAAIC,KACVC,EAAUH,EAAMI,KAAKD,QAAQE,MAChCX,KAAI,SAAAY,GACH,OAAO,OAAP,UACKA,EADL,CAEEC,MAAO,IAAIL,KAAKI,EAAOC,OACvBC,IAAK,IAAIN,KAAKI,EAAOE,UAGxBC,QAAO,SAAAH,GAAM,OAAIA,EAAOE,IAAMP,KAEjCE,EAAQO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAID,KAE3B,IAAME,EAAUC,OAAO1B,QACrBG,EAAQY,GAAS,qBAAGI,MAAkBQ,kBACtCC,QAAO,SAACC,EAAD,GAA0B,IAAlBC,EAAiB,KAAXC,EAAW,KAEhC,OADAF,EAAKC,GAAQ3B,EAAQ4B,GAAO,qBAAGZ,MAAkBa,cAC1CH,IACN,IAGH,OADAI,QAAQC,IAAIT,GAEV,YAAC,IAAD,KACE,YAAC,IAAD,CAAKU,MAAM,oBACX,6CAEA,sdAUCT,OAAO1B,QAAQyB,GAASnB,KAAI,gBAAEwB,EAAF,KAAQM,EAAR,YAC3B,uBACGV,OAAO1B,QAAQoC,GAAQ9B,KAAI,gBAAE+B,EAAF,KAAStB,EAAT,YAC1B,8BACE,sBACGb,EAAOmC,GADV,IACmBP,GAGlBf,EAAQT,KAAI,SAAAY,GAAM,OACjB,uBACE,sBAAKA,EAAOoB,MAAQpB,EAAOqB,UAAUD,MACrC,qBACGpB,EAAOC,MAAMqB,qBACb,IACAtB,EAAOE,IAAIoB,qBAAsB,KAEnCC,KAAKC,UAAUxB,eAQ5B,sBACGH,EAAQT,KAAI,SAACY,EAAQyB,GAAT,OACX,kBAAIlC,IAAKkC,GAAQF,KAAKC,UAAUxB,QAIpC,uBACG,KAuBF,IAAM0B,EAAK,Y,qBC9HlB,IAAIC,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUnD,GAOf,IANA,IAKIQ,EALA4C,EAAIN,EAAU9C,GACdqD,EAAOR,EAAQO,GACfE,EAASD,EAAKC,OACdC,EAAI,EACJC,EAAS,GAENF,EAASC,GACd/C,EAAM6C,EAAKE,KACNX,IAAeG,EAAOU,KAAKL,EAAG5C,IACjCgD,EAAO/C,KAAK0C,EAAY,CAAC3C,EAAK4C,EAAE5C,IAAQ4C,EAAE5C,IAG9C,OAAOgD","file":"component---src-pages-index-js-5107dba7baa71e5827f7.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst MONTHS = [\n  \"Januar\",\n  \"Februar\",\n  \"März\",\n  \"April\",\n  \"Mai\",\n  \"Juni\",\n  \"Juli\",\n  \"August\",\n  \"September\",\n  \"Oktober\",\n  \"November\",\n  \"Dezember\",\n]\n\nfunction groupBy(list, keyGetter) {\n  const map = {}\n  list.forEach(item => {\n    const key = keyGetter(item)\n    if (!(key in map)) {\n      map[key] = [item]\n    } else {\n      map[key].push(item)\n    }\n  })\n  return map\n}\n\nconst IndexPage = props => {\n  const now = new Date()\n  const termine = props.data.termine.nodes\n    .map(termin => {\n      return {\n        ...termin,\n        start: new Date(termin.start),\n        end: new Date(termin.end),\n      }\n    })\n    .filter(termin => termin.end > now)\n\n  termine.sort((a, b) => b - a)\n\n  const monthly = Object.entries(\n    groupBy(termine, ({ start }) => start.getFullYear())\n  ).reduce((memo, [year, items]) => {\n    memo[year] = groupBy(items, ({ start }) => start.getMonth())\n    return memo\n  }, {})\n\n  console.log(monthly)\n  return (\n    <Layout>\n      <SEO title=\"Alle Spieletage\" />\n      <h1>Kommende Spieletage</h1>\n\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enimad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n        mollit anim id est laborum.\n      </p>\n\n      {Object.entries(monthly).map(([year, months]) => (\n        <div>\n          {Object.entries(months).map(([month, termine]) => (\n            <>\n              <h2>\n                {MONTHS[month]} {year}\n              </h2>\n\n              {termine.map(termin => (\n                <div>\n                  <h3>{termin.name || termin.spieletag.name}</h3>\n                  <p>\n                    {termin.start.toLocaleDateString()}\n                    {\"–\"}\n                    {termin.end.toLocaleDateString()}{\" \"}\n                  </p>\n                  {JSON.stringify(termin)}\n                </div>\n              ))}\n            </>\n          ))}\n        </div>\n      ))}\n\n      <ul>\n        {termine.map((termin, index) => (\n          <li key={index}>{JSON.stringify(termin)}</li>\n        ))}\n      </ul>\n\n      <ul>\n        {false &&\n          props.data.allSpiele2Csv.nodes.map(\n            ({ id, Name, Ort, Webseite }, index) => (\n              <li key={index}>\n                <h4>{Name}</h4>\n                <span\n                  css={css`\n                    height: 1.5rem;\n                  `}\n                >\n                  {\" \"}\n                  {Ort}\n                </span>\n              </li>\n            )\n          )}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  {\n    allSpiele2Csv {\n      nodes {\n        id\n        Besuchertext\n        Besucherzahl\n        Datum\n        Name\n        Latitude\n        Longitude\n        Ort\n        Webseite\n      }\n    }\n    spieletage: allContentfulSpieletag {\n      edges {\n        node {\n          name\n          website\n          geolocation {\n            lat\n            lon\n          }\n          beschreibung {\n            beschreibung\n          }\n        }\n      }\n    }\n    termine: allContentfulTermin {\n      nodes {\n        name\n        besucherzahl\n        start\n        end\n        spieletag {\n          name\n          geolocation {\n            lat\n            lon\n          }\n          website\n          beschreibung {\n            beschreibung\n          }\n        }\n      }\n    }\n  }\n`\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}